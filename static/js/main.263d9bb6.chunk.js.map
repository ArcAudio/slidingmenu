{"version":3,"sources":["AnswerContainer.js","MenuButton.js","ToDoItems.js","TodoList.js","ThreeTest.js","pic1.jpg","pic2.jpg","pic3.jpg","ImageFadeMaterial.js","Interactive1.js","Interactive2.js","Interactive3.js","Menu.js","Fade.js","MenuContainer.js","index.js"],"names":["xhr","MenuButton","nextProps","nextState","handleMouseDown","this","props","id","onMouseDown","Component","TodoItems","item","text","key","listItems","entries","map","createTasks","className","AnswerContainer","context","state","answer","processRequest","bind","XMLHttpRequest","usersEntry","answ","answerlink","concat","open","send","console","log","addEventListener","readyState","status","response","JSON","parse","responseText","setState","TodoList","items","addItem","e","_inputElement","value","newItem","Date","now","prevState","preventDefault","onSubmit","ref","a","placeholder","type","React","ImageFadeMaterial","uniforms","effectFactor","dispFactor","tex","undefined","tex2","disp","iTime","vertexShader","fragmentShader","v","THREE","FadingImage","useRef","useLoader","img1","img2","texture1","texture2","dispTexture","useState","hovered","setHover","useFrame","current","lerp","onPointerMove","onPointerOut","Interactive1","camera","position","fov","fallback","Interactive2","Interactive3","extend","Menu","visibility","menuVisibility","style","display","flexDirection","alignItems","to","exact","path","component","Fade","texture","apply","MenuContainer","isMounted","visible","toggleMenu","stopPropagation","justifyContent","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.263d9bb6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Answer.css\";\nvar xhr;\nclass AnswerContainer extends Component {\n    constructor(props, context) {\n        super(props, context);\n    \n        this.state = {\n          answer: \"...\"\n        };\n    \n        this.processRequest = this.processRequest.bind(this);\n      }\n    \n      componentDidMount() {\n        xhr = new XMLHttpRequest();\n        var usersEntry = this.props.answ;\n        var link_string = 'https://crypto-authors-cypher.herokuapp.com/check-answer?answer=';\n        var answerlink = (link_string.concat(usersEntry)); // UsersEntry Yet to be put in\n        xhr.open(\"GET\", answerlink, true);\n        xhr.send();\n        console.log(answerlink);\n        xhr.addEventListener(\"readystatechange\", this.processRequest, false);\n      }\n    \n      processRequest() {\n        if (xhr.readyState === 4 && xhr.status === 200) {\n          var response = JSON.parse(xhr.responseText);\n    \n          this.setState({\n            answer: response.text\n          });\n        }\n      }\n    \n      render() {\n        return (\n            <div className=\"text\">{this.state.answer}</div>\n        );\n      }\n    };\n\nexport default AnswerContainer;","import React, { Component } from \"react\";\nimport './MenuButton.css';\n \nclass MenuButton extends Component {      \n    shouldComponentUpdate(nextProps, nextState) {     \n        if (nextProps.handleMouseDown === this.props.handleMouseDown) {\n        return false;\n      } else {\n        return true;\n      }\n\n  }\n    \n  render() {\n    //console.log(\"Rendering: MenuButton\");\n    return (\n      <button id=\"roundButton\"\n              onMouseDown={this.props.handleMouseDown}></button>\n    );\n  }\n}\n \nexport default MenuButton;","import React, { Component } from \"react\";\n\nclass TodoItems extends Component {\n  createTasks(item) {\n    return <li key={item.key}>{item.text} </li>\n  }\n \n  render() {\n    var todoEntries = this.props.entries;\n    var listItems = todoEntries.map(this.createTasks);\n \n    return (\n      <ul className=\"theList\">\n          {listItems}\n      </ul>\n    );\n  }\n};\n\nexport default TodoItems;","import React, { Component } from \"react\";\nimport TodoItems from \"./ToDoItems\";\nimport \"./ToDoList.css\";\nimport AnswerContainer from \"./AnswerContainer\";\n//var fks;\nclass TodoList extends Component {\n\n    constructor(props) {\n        super(props);\n     \n        this.state = {\n            items: []\n          };\n\n        this.addItem = this.addItem.bind(this);\n      }\n       \n      addItem(e) {\n        if (this._inputElement.value !== \"\") {\n          var newItem = {\n            text: this._inputElement.value,\n            key: Date.now()\n          };\n          //fks = 'this._inputElement.value';\n          this.setState((prevState) => {\n            return { \n              items: prevState.items.concat(newItem) \n            };\n          });\n          this._inputElement.value = \"\";\n        } \n        console.log(this.state.items);   \n        e.preventDefault();\n        }\n\n  render() {\n    return (\n      <div className=\"todoListMain\">\n        <div className=\"header\">\n          <form onSubmit={this.addItem}>      \n          <input ref={(a) => this._inputElement = a} \n           placeholder=\"Enter Answer\">\n            </input>\n            <button type=\"Submit\">add</button>\n      \n          </form>\n          <AnswerContainer answ={\"cryptoauthors\"}/> \n{/*           \n          Just need to link this to last answer in item list  */}\n        </div>\n        <TodoItems entries={this.state.items}/>\n      </div>\n    );\n  }\n}\nexport default TodoList;\n","\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from 'three';\nimport {OrbitControls} from \"three/examples/jsm/controls/OrbitControls\";\nconst style = {\n    height: 250 // we can control scene size by setting container dimensions\n  };\n  \nclass ThreeTest extends React.Component {\n    componentDidMount() {\n        var scene = new THREE.Scene();\n        var camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 1000 );\n        var renderer = new THREE.WebGLRenderer();\n        renderer.setSize( window.innerWidth, window.innerHeight );\n        // document.body.appendChild( renderer.domElement );\n        // use ref as a mount point of the Three.js scene instead of the document.body\n        this.mount.appendChild( renderer.domElement );\n        var geometry = new THREE.BoxGeometry( 1, 1, 1 );\n        var material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\n        var cube = new THREE.Mesh( geometry, material );\n        scene.add( cube );\n        camera.position.z = 5;\n        var animate = function () {\n          requestAnimationFrame( animate );\n          cube.rotation.x += 0.01;\n          cube.rotation.y += 0.01;\n          renderer.render( scene, camera );\n        };\n\n\n        \n        animate();\n      }\n      componentWillUnmount() {\n        window.removeEventListener('resize', this.handleWindowResize);\n        window.cancelAnimationFrame(this.requestID);\n        this.controls.dispose();\n    };\n\n    //     handleWindowResize = () => {\n    //     const width = this.el.clientWidth;\n    //     const height = this.el.clientHeight;\n    \n    //     this.renderer.setSize( width, height );\n    //     this.camera.aspect = width / height;\n    //     this.camera.updateProjectionMatrix();\n    // };\n\n      render() {\n        return (\n          <div ref={ref => (this.mount = ref)} />\n        )\n      }\n    }\n//     componentDidMount() {\n//         this.sceneSetup();\n//         this.addCustomSceneObjects();\n//         this.startAnimationLoop();\n//         window.addEventListener('resize', this.handleWindowResize);\n//     };\n\n\n//     componentWillUnmount() {\n//         window.removeEventListener('resize', this.handleWindowResize);\n//         window.cancelAnimationFrame(this.requestID);\n//         this.controls.dispose();\n//     };\n    \n//     handleWindowResize = () => {\n//         const width = this.el.clientWidth;\n//         const height = this.el.clientHeight;\n    \n//         this.renderer.setSize( width, height );\n//         this.camera.aspect = width / height;\n//         this.camera.updateProjectionMatrix();\n//     };\n\n//     sceneSetup = () => {\n//         // get container dimensions and use them for scene sizing\n//         const width = this.el.clientWidth;\n//         const height = this.el.clientHeight;\n\n//         this.scene = new THREE.Scene();\n//         this.camera = new THREE.PerspectiveCamera(\n//             75, // fov = field of view\n//             width / height, // aspect ratio\n//             0.1, // near plane\n//             1000 // far plane\n//         );\n//         this.controls = new OrbitControls( this.camera, this.el );\n\n//         // after that this.controls might be used for enabling/disabling zoom:\n//          this.controls.enableZoom = false;\n\n//         // set some distance from a cube that is located at z = 0\n//         this.camera.position.z = 5;\n//         this.renderer = new THREE.WebGLRenderer();\n//         this.renderer.setSize( width, height );\n//         this.el.appendChild( this.renderer.domElement ); // mount using React ref\n//     };\n    \n    \n//     addCustomSceneObjects = () => {\n//         const geometry = new THREE.BoxGeometry(2, 2, 2);\n//         const material = new THREE.MeshPhongMaterial( {\n//             color: 0x156289,\n//             emissive: 0x072534,\n//             side: THREE.DoubleSide,\n//             flatShading: true\n//         } );\n//         this.cube = new THREE.Mesh( geometry, material );\n//         this.scene.add( this.cube );\n\n//         const lights = [];\n//         lights[ 0 ] = new THREE.PointLight( 0xffffff, 1, 0 );\n//         lights[ 1 ] = new THREE.PointLight( 0xffffff, 1, 0 );\n//         lights[ 2 ] = new THREE.PointLight( 0xffffff, 1, 0 );\n\n//         lights[ 0 ].position.set( 0, 200, 0 );\n//         lights[ 1 ].position.set( 100, 200, 100 );\n//         lights[ 2 ].position.set( - 100, - 200, - 100 );\n\n//         this.scene.add( lights[ 0 ] );\n//         this.scene.add( lights[ 1 ] );\n//         this.scene.add( lights[ 2 ] );\n//     };\n\n   \n//     startAnimationLoop = () => {\n//         // this.cube.rotation.x += 0.01;\n//         // this.cube.rotation.y += 0.01;\n\n//         this.renderer.render( this.scene, this.camera );\n//         this.requestID = window.requestAnimationFrame(this.startAnimationLoop);\n//     };\n    \n//     render() {\n//         return  <div ref={ref => (this.mount = ref)} />\n//     }\n// }\n\nexport default ThreeTest;","export default __webpack_public_path__ + \"static/media/pic1.26366610.jpg\";","export default __webpack_public_path__ + \"static/media/pic2.44c902bf.jpg\";","export default __webpack_public_path__ + \"static/media/pic3.53de3313.jpg\";","import * as THREE from \"three\"\nimport { extend } from \"@react-three/fiber\"\n\nexport class ImageFadeMaterial extends THREE.ShaderMaterial {\n  constructor() {\n    super({\n      uniforms: {\n        effectFactor: { value: 1.2 },\n        dispFactor: { value: 0 },\n        tex: { value: undefined },\n        tex2: { value: undefined },\n        disp: { value: undefined },\n        iTime: { get value() { return 0.0002 * (Date.now() % 40000) } }\n        //itime: {value: Date.now()}\n      },\n      vertexShader: `varying vec2 vUv;\n      void main() {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 0.3 );\n      }`,\n      fragmentShader: `varying vec2 vUv;\n      uniform sampler2D tex;\n      uniform sampler2D tex2;\n      uniform sampler2D disp;\n      uniform float _rot;\n      uniform float dispFactor;\n      uniform float effectFactor;\n      uniform float iTime;\n      const float eps = 0.01;\n      const vec3 floorColor = vec3(0.1,0.0,1.0);\n      const vec3 otherColor = vec3(1.0,0.0,0.0);\n      const float PI = 3.141592658;\n      const float TAU = 2.0 * PI;\n      const float sections = 6.0;\n\n      float sphere(vec3 p)\n{\n// p.x = mod(p.x+1.0,-2.);\n\n vec3 q = fract(p) * 1.0-0.5;\n  //vec3 q;   \n    \n q.x = cos(p.y+0.2*iTime);\n    \n q.y = sin(p.x+0.2*iTime);  \n //vec3 q = mod(p, 3.1);   \n return length(q) - 1.5;\n}\n\nfloat scene (vec3 p)\n{\n   return sphere(cos(p)*0.5);\n   //return sphere(p);\n}\n\nfloat sdHexPrism( vec3 p, vec2 h )\n{\n   \n    vec3 q = abs(p);\n    //q.x = mod(q.x+10.0,20.0)-10.0;\n    q.y = fract(q.y) * 2.0-1.0;\n    \n    return max(q.z-h.y,max((q.x*0.866025+q.y*0.5),q.y)-h.x);\n}\n\nfloat trace(vec3 o, vec3 r)\n{\n\tfloat t = 0.0;\n    for (int i = 0; i < 32; ++i)\n    {\n    \tvec3 p = o + r *t;\n        float d = scene(p);\n       // vec3 norml = getNormal(p); \n        t += d * 0.5;\n    }\n    return t;\n}\n\nvec3 getNormal(vec3 p)\n{\n\tvec3 normal;\n    vec3 ep = vec3(eps,0.0,0.0);\n    normal.x = scene(p+ep.xyz) - scene(p-ep.xyz);\n    normal.y = scene(p+ep.yxz) - scene(p-ep.yxz);\n    normal.z = scene(p+ep.yzx) - scene(p-ep.yzx);\n    return normalize(normal);\n}\n\nfloat calcShadowFactor(vec3 p, vec3 norm, vec3 lightDir)\n{\n    float t = .0;\n    vec3 rayStart = p + norm + eps*2.0;\n        for (int i =0; i<16;i++)\n        {\n            vec3 sP = rayStart - lightDir * t;\n            float dist = scene(sP);\n            if(dist < eps)\n            {\n                return 1.0;\n            }\n            t+=dist;\n        }\n    return 0.0;\n}\n\n    vec2 pattern1(vec2 uv)\n    {\n      float s = sin(3.1416*iTime/16.0);\n        float c = sin(3.1416*iTime/16.0);\n        //float c = 1.0;\n        uv = uv- vec2(0.5);\n        vec2 point = vec2(c*uv.x - s*uv.y, s*uv.x + c*uv.y)*0.01;\n      // return vec2 (sin(point.x)+sin(point.y);\n        return vec2(sin(point.x),sin(point.y));\n    }\n\n    vec2 pattern2(vec2 uv)\n    {\n        float time = iTime;\n        float r = sqrt(dot(uv,uv)); // These are equivalent I think\n        \n        float a = atan( uv.x, uv.y);\n        \n        float u = r*cos(a+r); // omg this is trppy\n        float v = r*sin(a+r);\n        return vec2(u,v);\n    }\n\n    vec2 pattern3(vec2 uv)\n    {\n        float time = iTime;\n        float r = sqrt(dot(uv,uv)); // These are equivalent I think\n        \n        float a = atan( uv.y,uv.x );\n        \n        float u = cos(a+cos(r)/10.0)/r; // This is horribly mind manifesting!\n        float v = (sin(a+r)/r); \n        return vec2(u,v);\n    }\n\n    vec2 pattern4(vec2 uv)\n    {\n        float time = iTime;\n        float r = sqrt(dot(uv,uv)); // These are equivalent I think\n        \n        float a = atan( uv.x, uv.y);\n        \n        float u = (uv.x * time *cos(1.0*r) - uv.y*sin(1.0*time*r)) * 0.01; //Yay it looks like a spiral\n        float v = (uv.y*time*cos(1.0*r) + uv.x*sin(1.0*time*r)) * 0.01;\n        return vec2(u,v);\n    }\n\n    vec2 pattern5(vec2 uv)\n    {\n          float time = iTime;\n          float r = sqrt(dot(uv,uv));\n          float u = 0.1*uv.x/(0.11+r*0.5); // The r's here just make it look four quads\n          float v = 0.1*uv.y/(0.11+r*0.5);\n          return vec2(u,v);\n    }\n\n    vec2 pattern6(vec2 uv)\n    {\n        float time = iTime;\n        float a = atan( uv.x, uv.y);\n        float r = sqrt(dot(uv,uv));\n        float u = 0.01*uv.y+0.01*cos(a*5.0)/r; // Looks cool, but a bit smashed, i'm doing it wrong!\n        float v = 0.01*uv.x+0.01*sin(a*5.0)/r;\n      return vec2(u,v);\n    }\n\n    vec2 pattern7(vec2 uv)\n    {\n        float time = iTime;\n        float a = atan( uv.x, uv.y);\n        float r = sqrt(dot(uv.x,uv.x));\n        float u = 0.9/(r+0.5*uv.x); // Looks cool, but a bit smashed, i'm doing it wrong!\n        float v = 0.9/(r+0.5*uv.x);\n      return vec2(u,v);\n    }\n\n      void main() {\n        vec2 p2 = vUv;\n        //vec3 col = vec3(1.0);\n        vec2 uv = vUv;\n    \n        vec4 finalColor = vec4(0.0,0.0,0.0,1.);\n          \n          uv = uv * 2.0 -1.0;\n          \n          //vec2 uv1 = vec2(pattern(uv),pattern(uv));\n          \n          vec2 uv1 = vec2(pattern1(uv));\n          vec2 uv2 = vec2(pattern2(uv));\n          \n          float rad = length(uv);\n          float angle = atan(uv.y, uv.x);\n      \n          float ma = mod(angle, TAU/sections);\n          ma = abs(ma - PI/sections);\n           float time = iTime/10.0;\n          float x = cos(ma-time) * rad;\n          float y = sin(ma) * (rad);\n          \n          vec2 uv3 = vec2(x,y);\n          \n          uv.x *= p2.x;\n          \n          vec2 omix = mix(uv3,uv1, 0.9*sin(iTime*0.25));\n          \n          vec2 mxer = mix(uv2, omix, 1.0*cos(iTime*0.5));\n          \n          vec3 r = normalize(vec3(mxer,1.0));\n          \n         // vec3 o = vec3(0.0,0.0,-2.0);\n          vec3 o = vec3(0.0,0.0,-3.0);\n          float t = trace(o,r);\n          //float t = 0.0;\n          float sq = sqrt(dot(uv,uv));\n          for (int i = 0; i < 32; ++i)\n          {\n            vec3 p = o + r *t;\n              float d = scene(p);\n              \n              if (d < eps)\n              {\n                vec3 norml = getNormal(p);\n                vec3 ldir = vec3(sin(iTime),-0.5,cos(iTime));\n              //\tfloat diffuseFactor = max(dot(norml,-ldir),0.0);\n                  float diffuseFactor = max(dot(norml,-ldir),0.02);\n      \n                float shadow = calcShadowFactor(p,norml,ldir);   \n                vec3 diffuseColor = vec3((atan(iTime)),1.,abs(sin(iTime)));\n                //finalColor = vec3(1,0,1)*max(dot(norml,vec3(sin(iTime),cos(iTime),0.33)),0.0);\n                finalColor = vec4((1.9-shadow*sq)*diffuseFactor*(sin(r+0.7))*diffuseColor,1); \n              }\n              t += d;\n          }\n          \n          float fog = 0.2 / (0.9 +t*t*0.1);\n          \n         // vec4 fc *= vec4(finalColor+fog);\n          finalColor += fog;\n          \n        gl_FragColor = vec4(finalColor);\n       // gl_FragColor = vec4(col,0.25);\n\n      }`\n    })\n  }\n\n  get effectFactor() {\n    return this.uniforms.effectFactor.value\n  }\n  set effectFactor(v) {\n    return (this.uniforms.effectFactor.value = v)\n  }\n  get dispFactor() {\n    return this.uniforms.dispFactor.value\n  }\n  set dispFactor(v) {\n    return (this.uniforms.dispFactor.value = v)\n  }\n  get tex() {\n    return this.uniforms.tex.value\n  }\n  set tex(v) {\n    return (this.uniforms.tex.value = v)\n  }\n  get tex2() {\n    return this.uniforms.tex2.value\n  }\n  set tex2(v) {\n    return (this.uniforms.tex2.value = v)\n  }\n  get disp() {\n    return this.uniforms.disp.value\n  }\n  set disp(v) {\n    return (this.uniforms.disp.value = v)\n  }\n\n  // get time() {\n  //   return this.uniforms.time.value\n  // }\n  // set itime(v) {\n  //   return (this.uniforms.itime.value = Date.now())\n  // }\n}\n\nextend({ ImageFadeMaterial })\n\n//export default ImageFadeMaterial;","import \"./index.css\"; \nimport * as THREE from \"three\"\nimport React, { Suspense, useRef, useState, Component } from \"react\"\nimport { Canvas, useFrame, useLoader } from \"@react-three/fiber\"\nimport TodoList from \"./TodoList\";\n\nimport img1 from './pic1.jpg';\nimport img2 from './pic2.jpg';\nimport disp from './pic3.jpg';\n\nimport ShaderMat, { ImageFadeMaterial } from \"./ImageFadeMaterial\";\n\nfunction FadingImage() {\n    const ref = useRef()\n    const [texture1, texture2, dispTexture] = useLoader(THREE.TextureLoader, [img1, img2, disp])\n    const [hovered, setHover] = useState(false)\n    useFrame(() => (ref.current.dispFactor = THREE.MathUtils.lerp(ref.current.dispFactor, !!hovered, 0.1)))\n    return (\n      <mesh onPointerMove={(e) => setHover(true)} onPointerOut={(e) => setHover(false)}>\n        <planeGeometry />\n        <imageFadeMaterial ref={ref} tex={texture1} tex2={texture2} disp={dispTexture}/>\n        \n      </mesh>\n    )\n  }\n\n  export default function Interactive1() {\n    return (\n      <Canvas camera={{ position: [0.0, 0, 0.25], fov: 150 }}>\n        <Suspense fallback={null}>\n        <FadingImage />\n        \n        </Suspense>\n\n      </Canvas>\n    )\n  }","import \"./index.css\"; \nimport * as THREE from \"three\"\nimport React, { Suspense, useRef, useState, Component } from \"react\"\nimport { Canvas, useFrame, useLoader } from \"@react-three/fiber\"\n\n\nimport img1 from './pic1.jpg';\nimport img2 from './pic2.jpg';\nimport disp from './pic3.jpg';\n\nimport ShaderMat, { ImageFadeMaterial } from \"./ImageFadeMaterial\";\n\nfunction FadingImage() {\n    const ref = useRef()\n    const [texture1, texture2, dispTexture] = useLoader(THREE.TextureLoader, [img1, img2, disp])\n    const [hovered, setHover] = useState(false)\n    useFrame(() => (ref.current.dispFactor = THREE.MathUtils.lerp(ref.current.dispFactor, !!hovered, 0.1)))\n    return (\n      <mesh onPointerMove={(e) => setHover(true)} onPointerOut={(e) => setHover(false)}>\n        <planeGeometry />\n        <imageFadeMaterial ref={ref} tex={texture1} tex2={texture2} disp={dispTexture}/>\n      </mesh>\n    )\n  }\n\n  export default function Interactive2() {\n    return (\n      <Canvas camera={{ position: [0, 0.0, 0.5], fov: 60 }}>\n        <Suspense fallback={null}>\n        <FadingImage />\n        </Suspense>\n\n      </Canvas>\n    )\n  }","import \"./index.css\"; \nimport * as THREE from \"three\"\nimport React, { Suspense, useRef, useState, Component } from \"react\"\nimport { Canvas, useFrame, useLoader } from \"@react-three/fiber\"\n\n\nimport img1 from './pic1.jpg';\nimport img2 from './pic2.jpg';\nimport disp from './pic3.jpg';\n\nimport ShaderMat, { ImageFadeMaterial } from \"./ImageFadeMaterial\";\n\nfunction FadingImage() {\n    const ref = useRef()\n    const [texture1, texture2, dispTexture] = useLoader(THREE.TextureLoader, [img1, img2, disp])\n    const [hovered, setHover] = useState(false)\n    useFrame(() => (ref.current.dispFactor = THREE.MathUtils.lerp(ref.current.dispFactor, !!hovered, 0.1)))\n    return (\n      <mesh onPointerMove={(e) => setHover(true)} onPointerOut={(e) => setHover(false)}>\n        <planeGeometry />\n        <imageFadeMaterial ref={ref} tex={texture1} tex2={texture2} disp={dispTexture}/>\n      </mesh>\n    )\n  }\n\n  export default function Interactive3() {\n    return (\n      <Canvas camera={{ position: [0, 0, 0.25], fov: 70 }}>\n        <Suspense fallback={null}>\n        <FadingImage />\n        </Suspense>\n\n      </Canvas>\n    )\n  }","import React, { Component } from \"react\";\nimport \"./Menu.css\";\nimport TodoList from \"./TodoList\";\nimport MenuButton from \"./MenuButton\";\nimport ThreeTest from \"./ThreeTest\";\nimport Interactive1 from \"./Interactive1\";\nimport Interactive2 from \"./Interactive2\";\nimport Interactive3 from \"./Interactive3\";\nimport {\n    Route,\n    NavLink,\n    HashRouter\n  } from \"react-router-dom\";\n\nclass Menu extends Component {\n  render() {\n    //console.log(\"Rendering: Menu\");\n    var visibility = \"hide\";\n \n    if (this.props.menuVisibility) {\n      visibility = \"show\";\n    }\n \n    return (\n      <div style={{   \n           \n           display: 'flex',\n           flexDirection: 'column',\n           alignItems: 'center',\n          // justifyContent: 'space-between'\n        }} \n           id=\"flyoutMenu\"\n           \n            //onMouseDown={this.props.handleMouseDown} \n           className={visibility}>\n        <MenuButton handleMouseDown={this.props.handleMouseDown}/>\n        <HashRouter>\n        {/* <ul> */}\n            <h2><NavLink to=\"/\">Home</NavLink></h2>\n            \n            {/* <li><NavLink to=\"/artworks\">Artworks</NavLink></li>\n            <li><NavLink to=\"/contact\">Contact</NavLink></li>\n            <li><NavLink to=\"/threetest\">ThreeTest</NavLink></li> */}\n           <div> <h2><NavLink to=\"/interactive1\">Test_1</NavLink></h2> </div>\n            <h2><NavLink to=\"/interactive2\">Test_2</NavLink></h2>\n            <h2><NavLink to=\"/interactive3\">Test_3</NavLink></h2>\n          {/* </ul> */}\n          <div>\n          <ul className=\"content\">\n            <Route exact path=\"/\" component={this.Menu}/>\n            {/* <Route path=\"/artworks\" component={Artworks}/>\n            <Route path=\"/contact\" component={Contact}/>\n            <Route path=\"/threetest\" component={ThreeTest}/> */}\n            <Route path=\"/interactive1\" component={Interactive1}/>\n            <Route path=\"/interactive2\" component={Interactive2}/>\n            <Route path=\"/interactive3\" component={Interactive3}/>\n            </ul> \n          </div>\n          <ul className=\"bits\">\n              \n          <TodoList/></ul>\n\n        {/* <h2><a href=\"#\">Home</a></h2>\n        <h2><a href=\"#\">About</a></h2>\n        <h2><a href=\"#\">Contact</a></h2>\n        <h2><a href=\"#\">Search</a></h2> */}\n       \n        </HashRouter>\n        <div>\n        \n        </div>\n      </div>\n    );\n  }\n}\n \nexport default Menu;","import * as THREE from \"three\";\nimport { apply } from \"react-spring/three\";\nimport { extend } from \"@react-three/fiber\";\n\nexport default class Fade extends THREE.ShaderMaterial {\n  constructor() {\n    super({\n      uniforms: {\n        effectFactor: { type: \"f\", value: 1.2 },\n        dispFactor: { type: \"f\", value: 0 },\n        texture: { type: \"t\", value: undefined },\n        texture2: { type: \"t\", value: undefined },\n        disp: { type: \"t\", value: undefined }\n      },\n      vertexShader: `\n        varying vec2 vUv;\n        void main() {\n          vUv = uv;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }`,\n      fragmentShader: `\n        varying vec2 vUv;\n        uniform sampler2D texture;\n        uniform sampler2D texture2;\n        uniform sampler2D disp;\n        uniform float _rot;\n        uniform float dispFactor;\n        uniform float effectFactor;\n        void main() {\n          vec2 uv = vUv;\n          // vec4 disp = texture2D(disp, uv);\n          // vec2 distortedPosition = vec2(uv.x, uv.y + dispFactor * (disp.r*effectFactor));\n          // vec2 distortedPosition2 = vec2(uv.x, uv.y - (1.0 - dispFactor) * (disp.r*effectFactor));\n          // vec4 _texture = texture2D(texture, distortedPosition);\n          // vec4 _texture2 = texture2D(texture2, distortedPosition2);\n          // vec4 finalTexture = mix(_texture, _texture2, dispFactor);\n          gl_FragColor = vec4(1.0);\n        }`\n    });\n  }\n\n  get texture() {\n    return this.uniforms.texture.value;\n  }\n  set texture(v) {\n    this.uniforms.texture.value = v;\n  }\n  get texture2() {\n    return this.uniforms.texture2.value;\n  }\n  set texture2(v) {\n    this.uniforms.texture2.value = v;\n  }\n  get disp() {\n    return this.uniforms.disp.value;\n  }\n  set disp(v) {\n    this.uniforms.disp.value = v;\n  }\n  get dispFactor() {\n    return this.uniforms.dispFactor.value;\n  }\n  set dispFactor(v) {\n    this.uniforms.dispFactor.value = v;\n  }\n}\n\n// register element in react-spring (a.fade)\napply({ Fade });\n// register element in r3f (<fade />)\nextend({ Fade });\n","import React, { Component, useState } from \"react\";\n// import {\n//     Route,\n//     NavLink,\n//     HashRouter\n//   } from \"react-router-dom\";\nimport MenuButton from './MenuButton';\nimport Menu from './Menu';\nimport Interactive1 from './Interactive1'\nimport Interactive2 from './Interactive2'\nimport Interactive3 from './Interactive3'\n//import ThreeTest from './ThreeTest'\n\nimport * as THREE from \"three\";\nimport { Canvas, useLoader } from \"react-three-fiber\";\n import { useSpring, a } from \"react-spring/three\";\nimport img1 from \"./pic1.jpg\";\nimport img2 from \"./pic2.jpg\";\nimport img3 from \"./pic3.jpg\";\nimport Fade from \"./Fade\";\nimport \"./index.css\";\nimport { ReactThreeFiber } from \"@react-three/fiber\";\n\nclass MenuContainer extends Component {\n    constructor(props, context) {\n        super(props, context);\n       \n        this.state = {\n          visible: false\n        };\n       \n        this.handleMouseDown = this.handleMouseDown.bind(this);\n        this.toggleMenu = this.toggleMenu.bind(this);\n\n      }\n      \n      handleMouseDown(e) {\n        this.toggleMenu();\n     \n        console.log(\"clicked\");\n        e.stopPropagation();\n      }       \n      toggleMenu() {\n        this.setState({\n            visible: !this.state.visible\n        });\n      }\n  state = { isMounted: true };\n  render() {\n    const { isMounted = true } = this.state;\n    //console.log(\"Rendering: MenuContainer\");\n    return (\n        <div>\n      <header>\n    \n         {/* <h1>Welcome</h1> */}\n      <div style={{    \n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'space-between'}}>\n      <MenuButton handleMouseDown={this.handleMouseDown}/>\n      <Menu handleMouseDown={this.handleMouseDown}\n      menuVisibility={this.state.visible}/>\n            {/* <div>\n      <MenuButton handleMouseDown={this.handleMouseDown}/>\n      <Menu handleMouseDown={this.handleMouseDown}\n      menuVisibility={this.state.visible}/>\n      </div> */}\n      </div>\n      </header>\n\n      </div>\n     \n      \n    );\n  }\n}\n \nexport default MenuContainer;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport MenuContainer from \"./MenuContainer\";\n \nReactDOM.render(\n  <MenuContainer/>, \n  document.querySelector(\"#container\")\n);"],"sourceRoot":""}